%{
#include "parser.h" // This is needed for the tokens generated by the lexer.
%}

/* options specifying file names */
%option outfile="lexer.c" header-file="lexer.h"

/* debugging options */
%option warn nodefault

/* options affecting scanner behavior */
%option never-interactive noyywrap

/* code-level and API options */
%option nounistd bison-bridge reentrant


number      [0-9]+(\.[0-9]+)?
ws          [ \r\n\t]+

%%

{ws}            { continue; }
"+"             { return TOKEN_ADD; }
"-"             { return TOKEN_SUB; }
"*"             { return TOKEN_MUL; }
"/"             { return TOKEN_DIV; }
"("             { return TOKEN_LBR; }
")"             { return TOKEN_RBR; }
{number}        {
                  yylval->value = atof(yytext);
                  return TOKEN_NUMBER;
                }
.               {
                  fprintf(stderr, "Lexer: unexpected character %s\n", yytext);
                  return yytext[0]; // Return a Bison "character token".
                }

%%
